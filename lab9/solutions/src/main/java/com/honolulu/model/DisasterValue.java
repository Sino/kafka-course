/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.honolulu.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class DisasterValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1171527456888584124L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DisasterValue\",\"namespace\":\"com.honolulu.model\",\"fields\":[{\"name\":\"disasterType\",\"type\":\"string\"},{\"name\":\"intensity\",\"type\":{\"type\":\"record\",\"name\":\"Intensity\",\"fields\":[{\"name\":\"scale\",\"type\":\"string\"},{\"name\":\"measurement\",\"type\":\"int\"}]}},{\"name\":\"recommendations\",\"type\":{\"type\":\"array\",\"items\":[\"string\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DisasterValue> ENCODER =
      new BinaryMessageEncoder<DisasterValue>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DisasterValue> DECODER =
      new BinaryMessageDecoder<DisasterValue>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<DisasterValue> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<DisasterValue> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<DisasterValue> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DisasterValue>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this DisasterValue to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a DisasterValue from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a DisasterValue instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static DisasterValue fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence disasterType;
  @Deprecated public com.honolulu.model.Intensity intensity;
  @Deprecated public java.util.List<java.lang.Object> recommendations;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DisasterValue() {}

  /**
   * All-args constructor.
   * @param disasterType The new value for disasterType
   * @param intensity The new value for intensity
   * @param recommendations The new value for recommendations
   */
  public DisasterValue(java.lang.CharSequence disasterType, com.honolulu.model.Intensity intensity, java.util.List<java.lang.Object> recommendations) {
    this.disasterType = disasterType;
    this.intensity = intensity;
    this.recommendations = recommendations;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return disasterType;
    case 1: return intensity;
    case 2: return recommendations;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: disasterType = (java.lang.CharSequence)value$; break;
    case 1: intensity = (com.honolulu.model.Intensity)value$; break;
    case 2: recommendations = (java.util.List<java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'disasterType' field.
   * @return The value of the 'disasterType' field.
   */
  public java.lang.CharSequence getDisasterType() {
    return disasterType;
  }


  /**
   * Sets the value of the 'disasterType' field.
   * @param value the value to set.
   */
  public void setDisasterType(java.lang.CharSequence value) {
    this.disasterType = value;
  }

  /**
   * Gets the value of the 'intensity' field.
   * @return The value of the 'intensity' field.
   */
  public com.honolulu.model.Intensity getIntensity() {
    return intensity;
  }


  /**
   * Sets the value of the 'intensity' field.
   * @param value the value to set.
   */
  public void setIntensity(com.honolulu.model.Intensity value) {
    this.intensity = value;
  }

  /**
   * Gets the value of the 'recommendations' field.
   * @return The value of the 'recommendations' field.
   */
  public java.util.List<java.lang.Object> getRecommendations() {
    return recommendations;
  }


  /**
   * Sets the value of the 'recommendations' field.
   * @param value the value to set.
   */
  public void setRecommendations(java.util.List<java.lang.Object> value) {
    this.recommendations = value;
  }

  /**
   * Creates a new DisasterValue RecordBuilder.
   * @return A new DisasterValue RecordBuilder
   */
  public static com.honolulu.model.DisasterValue.Builder newBuilder() {
    return new com.honolulu.model.DisasterValue.Builder();
  }

  /**
   * Creates a new DisasterValue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DisasterValue RecordBuilder
   */
  public static com.honolulu.model.DisasterValue.Builder newBuilder(com.honolulu.model.DisasterValue.Builder other) {
    if (other == null) {
      return new com.honolulu.model.DisasterValue.Builder();
    } else {
      return new com.honolulu.model.DisasterValue.Builder(other);
    }
  }

  /**
   * Creates a new DisasterValue RecordBuilder by copying an existing DisasterValue instance.
   * @param other The existing instance to copy.
   * @return A new DisasterValue RecordBuilder
   */
  public static com.honolulu.model.DisasterValue.Builder newBuilder(com.honolulu.model.DisasterValue other) {
    if (other == null) {
      return new com.honolulu.model.DisasterValue.Builder();
    } else {
      return new com.honolulu.model.DisasterValue.Builder(other);
    }
  }

  /**
   * RecordBuilder for DisasterValue instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DisasterValue>
    implements org.apache.avro.data.RecordBuilder<DisasterValue> {

    private java.lang.CharSequence disasterType;
    private com.honolulu.model.Intensity intensity;
    private com.honolulu.model.Intensity.Builder intensityBuilder;
    private java.util.List<java.lang.Object> recommendations;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.honolulu.model.DisasterValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.disasterType)) {
        this.disasterType = data().deepCopy(fields()[0].schema(), other.disasterType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.intensity)) {
        this.intensity = data().deepCopy(fields()[1].schema(), other.intensity);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasIntensityBuilder()) {
        this.intensityBuilder = com.honolulu.model.Intensity.newBuilder(other.getIntensityBuilder());
      }
      if (isValidValue(fields()[2], other.recommendations)) {
        this.recommendations = data().deepCopy(fields()[2].schema(), other.recommendations);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing DisasterValue instance
     * @param other The existing instance to copy.
     */
    private Builder(com.honolulu.model.DisasterValue other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.disasterType)) {
        this.disasterType = data().deepCopy(fields()[0].schema(), other.disasterType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.intensity)) {
        this.intensity = data().deepCopy(fields()[1].schema(), other.intensity);
        fieldSetFlags()[1] = true;
      }
      this.intensityBuilder = null;
      if (isValidValue(fields()[2], other.recommendations)) {
        this.recommendations = data().deepCopy(fields()[2].schema(), other.recommendations);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'disasterType' field.
      * @return The value.
      */
    public java.lang.CharSequence getDisasterType() {
      return disasterType;
    }


    /**
      * Sets the value of the 'disasterType' field.
      * @param value The value of 'disasterType'.
      * @return This builder.
      */
    public com.honolulu.model.DisasterValue.Builder setDisasterType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.disasterType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'disasterType' field has been set.
      * @return True if the 'disasterType' field has been set, false otherwise.
      */
    public boolean hasDisasterType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'disasterType' field.
      * @return This builder.
      */
    public com.honolulu.model.DisasterValue.Builder clearDisasterType() {
      disasterType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'intensity' field.
      * @return The value.
      */
    public com.honolulu.model.Intensity getIntensity() {
      return intensity;
    }


    /**
      * Sets the value of the 'intensity' field.
      * @param value The value of 'intensity'.
      * @return This builder.
      */
    public com.honolulu.model.DisasterValue.Builder setIntensity(com.honolulu.model.Intensity value) {
      validate(fields()[1], value);
      this.intensityBuilder = null;
      this.intensity = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'intensity' field has been set.
      * @return True if the 'intensity' field has been set, false otherwise.
      */
    public boolean hasIntensity() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'intensity' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.honolulu.model.Intensity.Builder getIntensityBuilder() {
      if (intensityBuilder == null) {
        if (hasIntensity()) {
          setIntensityBuilder(com.honolulu.model.Intensity.newBuilder(intensity));
        } else {
          setIntensityBuilder(com.honolulu.model.Intensity.newBuilder());
        }
      }
      return intensityBuilder;
    }

    /**
     * Sets the Builder instance for the 'intensity' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.honolulu.model.DisasterValue.Builder setIntensityBuilder(com.honolulu.model.Intensity.Builder value) {
      clearIntensity();
      intensityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'intensity' field has an active Builder instance
     * @return True if the 'intensity' field has an active Builder instance
     */
    public boolean hasIntensityBuilder() {
      return intensityBuilder != null;
    }

    /**
      * Clears the value of the 'intensity' field.
      * @return This builder.
      */
    public com.honolulu.model.DisasterValue.Builder clearIntensity() {
      intensity = null;
      intensityBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'recommendations' field.
      * @return The value.
      */
    public java.util.List<java.lang.Object> getRecommendations() {
      return recommendations;
    }


    /**
      * Sets the value of the 'recommendations' field.
      * @param value The value of 'recommendations'.
      * @return This builder.
      */
    public com.honolulu.model.DisasterValue.Builder setRecommendations(java.util.List<java.lang.Object> value) {
      validate(fields()[2], value);
      this.recommendations = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'recommendations' field has been set.
      * @return True if the 'recommendations' field has been set, false otherwise.
      */
    public boolean hasRecommendations() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'recommendations' field.
      * @return This builder.
      */
    public com.honolulu.model.DisasterValue.Builder clearRecommendations() {
      recommendations = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DisasterValue build() {
      try {
        DisasterValue record = new DisasterValue();
        record.disasterType = fieldSetFlags()[0] ? this.disasterType : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (intensityBuilder != null) {
          try {
            record.intensity = this.intensityBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("intensity"));
            throw e;
          }
        } else {
          record.intensity = fieldSetFlags()[1] ? this.intensity : (com.honolulu.model.Intensity) defaultValue(fields()[1]);
        }
        record.recommendations = fieldSetFlags()[2] ? this.recommendations : (java.util.List<java.lang.Object>) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DisasterValue>
    WRITER$ = (org.apache.avro.io.DatumWriter<DisasterValue>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DisasterValue>
    READER$ = (org.apache.avro.io.DatumReader<DisasterValue>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










